import { GetServerSidePropsContext } from 'next';
import Head from 'next/head';
import Link from 'next/link';
import axios from 'axios';
import { MovieProps } from '@/interfaces';
import { Box, Grid } from '@mui/material';
import MovieCard from './components/MovieCard';
import Container from './components/Container';
import FiltersSection, { GenreProps } from './components/FiltersSection';

export default function Home({
  moviesData,
  genresData,
}: {
  moviesData: { page: number; results: MovieProps[]; total_pages: number; total_results: number };
  genresData: { genres: GenreProps[] };
}) {
  return (
    <>
      <Head>
        <title>Movies - Test</title>
        <meta name='description' content='Generated by Movies' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main>
        <Container>
          <FiltersSection genresData={genresData} />
          <Box pb={4}>Top Rated Movies</Box>
          <Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 1, sm: 3, md: 5 }} marginBottom={5}>
            {moviesData?.results.map((movie: MovieProps) => (
              <Grid item xs={1} key={movie.id}>
                <Link href={`/${movie.id}`} style={{ textDecoration: 'none', color: 'inherit' }}>
                  <MovieCard movie={movie} />
                </Link>
              </Grid>
            ))}
          </Grid>
        </Container>
      </main>
    </>
  );
}

export async function getServerSideProps(context: GetServerSidePropsContext) {
  const { name, genre } = context.query;

  let url = `${process.env.NEXT_PUBLIC_API_BASE_URL}`;
  if (name) {
    url += `/search/movie?query=${name}&include_adult=false&language=en-US&page=1`;
  } else {
    url += `/discover/movie?include_adult=false&include_video=true&language=en-US&page=1&sort_by=vote_average.desc`;
    if (genre) {
      url += `&with_genres=${genre}`;
    }
  }

  try {
    const moviesRes = await axios.get(url, {
      headers: {
        Authorization: `Bearer ${process.env.NEXT_PUBLIC_API_KEY}`,
        'Content-Type': 'application/json',
      },
    });

    const genresRes = await axios.get(`${process.env.NEXT_PUBLIC_API_BASE_URL}/genre/movie/list?language=en`, {
      headers: {
        Authorization: `Bearer ${process.env.NEXT_PUBLIC_API_KEY}`,
        'Content-Type': 'application/json',
      },
    });

    return {
      props: {
        moviesData: moviesRes.data,
        genresData: genresRes.data,
      },
    };
  } catch (error) {
    return {
      props: {
        error: 'Failed to fetch data.',
      },
    };
  }
}
